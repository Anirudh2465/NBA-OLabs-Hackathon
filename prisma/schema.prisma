// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  name      String
  email     String  @unique
  password  String
  class     Class   @relation(fields: [classId], references: [id])
  classId   String
  progress  Progress[]
}

model Class {
  id       String    @id @default(uuid())
  name     String    // e.g., "Class 9", "Class 10"
  subjects Subject[]
  users    User[]
}

model Subject {
  id        String    @id @default(uuid())
  name      String    // e.g., "Physics", "Chemistry", "Biology"
  class     Class     @relation(fields: [classId], references: [id])
  classId   String
  chapters  Chapter[]
}

model Chapter {
  id         String   @id @default(uuid())
  title      String
  subject    Subject  @relation(fields: [subjectId], references: [id])
  subjectId  String
  topics     Topic[]
  progress   Progress[]
}

model Topic {
  id        String   @id @default(uuid())
  name      String
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
  chapterId String
  progress  Progress[]
}

model Progress {
  id        String  @id @default(uuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  chapter   Chapter @relation(fields: [chapterId], references: [id])
  chapterId String
  topics    Topic[]   // Stores user-specific topics as JSON
  completed Boolean @default(false)
}

